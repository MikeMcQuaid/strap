name: GitHub Actions CI

on:
  push:
    branches:
      - main
  pull_request:

defaults:
  run:
    shell: bash -xeuo pipefail {0}

permissions:
  contents: read

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Ruby
        uses: ruby/setup-ruby@4ff6f3611a42bc75eee1e5138240eb1613f48c8f # v1.266.0
        with:
          bundler-cache: true

      - name: Set up Homebrew
        id: setup-homebrew
        uses: Homebrew/actions/setup-homebrew@main
        with:
          core: false
          cask: false
          test-bot: false

      - run: brew bundle

      - run: script/style
        env:
          # Used by zizmor
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rspec:
    runs-on: ubuntu-latest
    needs: style
    steps:
      - name: Set up Git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Ruby
        uses: ruby/setup-ruby@4ff6f3611a42bc75eee1e5138240eb1613f48c8f # v1.266.0
        with:
          bundler-cache: true

      - name: Build Tailwind CSS
        run: bin/rails tailwindcss:build

      - name: Run RSpec tests
        run: bin/rspec

  strap_sh:
    runs-on: macos-15
    steps:
      - name: Set up Git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Cleanup macOS
        run: sudo rm -rf /opt/homebrew /Applications/Xcode.app /Library/Developer/CommandLineTools

      - run: bin/strap.sh
        env:
          STRAP_CI: 1
          STRAP_DEBUG: 1

      - name: Rerun bin/strap.sh
        run: bin/strap.sh
        env:
          STRAP_CI: 1

      - run: brew config

      - run: brew doctor

      - name: Test various brew installations
        run: |
          brew install --build-from-source --formula libfaketime
          brew install --cask orka
          brew install --formula xz

  docker:
    needs: [style, rspec]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set RUBY_VERSION
        run: echo RUBY_VERSION="$(cat .ruby-version)" >> "${GITHUB_ENV}"

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Packages
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: mikemcquaid
          password: ${{ secrets.GITHUB_TOKEN }}

      # We don't give Dependabot access to tokens.
      - if: github.actor != 'dependabot[bot]'
        name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: mikemcquaid
          password: ${{ secrets.DOCKER_TOKEN }}

      # Dependabot doesn't have access to push to the GHCR cache
      - if: github.actor != 'dependabot[bot]'
        name: Set up Docker cache
        run: echo DOCKER_CACHE_TO="type=registry,ref=ghcr.io/mikemcquaid/strap:cache,mode=max" >> "${GITHUB_ENV}"

      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            mikemcquaid/strap:latest
            mikemcquaid/strap:main
            mikemcquaid/strap:master
            ghcr.io/mikemcquaid/strap:latest
            ghcr.io/mikemcquaid/strap:main
            ghcr.io/mikemcquaid/strap:master
          cache-from: type=registry,ref=ghcr.io/mikemcquaid/strap:cache
          cache-to: ${{ env.DOCKER_CACHE_TO }}
          provenance: mode=max
          sbom: true
          build-args: |
            RUBY_VERSION=${{ env.RUBY_VERSION }}

  deployment:
    if: github.event_name != 'pull_request'
    needs: docker
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: production
      url: https://strap.mikemcquaid.com
    concurrency:
      group: production
      cancel-in-progress: false
    steps:
      - uses: digitalocean/action-doctl@135ac0aa0eed4437d547c6f12c364d3006b42824 # v2.5.1
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Deploy to DigitalOcean
        run: doctl apps create-deployment --wait 5b95141a-ccca-4466-8c8c-501c015fff10
