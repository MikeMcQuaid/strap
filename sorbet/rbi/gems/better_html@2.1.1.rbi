# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `better_html` gem.
# Please instead update this file by running `bin/tapioca gem better_html`.


# source://better_html//lib/better_html.rb#7
module BetterHtml
  class << self
    # source://better_html//lib/better_html.rb#11
    def config; end

    # Sets the attribute config
    #
    # @param value the value to set the attribute config to.
    #
    # source://better_html//lib/better_html.rb#9
    def config=(_arg0); end

    # @yield [config]
    #
    # source://better_html//lib/better_html.rb#15
    def configure; end
  end
end

# source://better_html//lib/better_html/better_erb/runtime_checks.rb#6
class BetterHtml::BetterErb
  # source://better_html//lib/better_html/better_erb.rb#11
  def content_types; end

  # source://better_html//lib/better_html/better_erb.rb#11
  def content_types=(val); end

  class << self
    # source://better_html//lib/better_html/better_erb.rb#11
    def content_types; end

    # source://better_html//lib/better_html/better_erb.rb#11
    def content_types=(val); end

    # source://better_html//lib/better_html/better_erb.rb#18
    def prepend!; end
  end
end

# source://better_html//lib/better_html/better_erb.rb#23
module BetterHtml::BetterErb::ConditionalImplementation
  # source://better_html//lib/better_html/better_erb.rb#24
  def call(template, source = T.unsafe(nil)); end

  private

  # source://better_html//lib/better_html/better_erb.rb#30
  def generate(template, source); end
end

# source://better_html//lib/better_html/better_erb/erubi_implementation.rb#8
class BetterHtml::BetterErb::ErubiImplementation < ::ActionView::Template::Handlers::ERB::Erubi
  include ::BetterHtml::BetterErb::RuntimeChecks

  # source://better_html//lib/better_html/better_erb/erubi_implementation.rb#39
  def add_code(code); end

  # source://better_html//lib/better_html/better_erb/erubi_implementation.rb#31
  def add_expression(indicator, code); end

  # source://better_html//lib/better_html/better_erb/erubi_implementation.rb#11
  def add_text(text); end

  private

  # source://better_html//lib/better_html/better_erb/erubi_implementation.rb#49
  def escape_text(text); end
end

# source://better_html//lib/better_html/better_erb/runtime_checks.rb#7
module BetterHtml::BetterErb::RuntimeChecks
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#8
  def initialize(erb, config: T.unsafe(nil), **options); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#14
  def validate!; end

  private

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#32
  def add_expr_auto_escaped(src, code, auto_escape); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#82
  def block_check(src, code); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#157
  def build_location(line, column, length); end

  # @raise [BetterHtml::HtmlError]
  #
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#128
  def check_attribute_name(type, start, stop, line, column); end

  # @raise [BetterHtml::HtmlError]
  #
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#94
  def check_parser_errors; end

  # @raise [BetterHtml::HtmlError]
  #
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#138
  def check_quoted_value(type, start, stop, line, column); end

  # @raise [BetterHtml::HtmlError]
  #
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#117
  def check_tag_name(type, start, stop, line, column); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#110
  def check_token(type, *args); end

  # @raise [BetterHtml::HtmlError]
  #
  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#149
  def check_unquoted_value(type, start, stop, line, column); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#24
  def class_name; end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#164
  def extract_line(line); end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#48
  def parser_context; end

  # source://better_html//lib/better_html/better_erb/runtime_checks.rb#28
  def wrap_method; end
end

# source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#5
class BetterHtml::BetterErb::ValidatedOutputBuffer
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#165
  def html_safe; end

  # @return [Boolean]
  #
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#161
  def html_safe?; end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#169
  def to_s; end

  class << self
    # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#156
    def wrap(output, context, code, auto_escape); end
  end
end

# source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#6
class BetterHtml::BetterErb::ValidatedOutputBuffer::Context
  # @return [Context] a new instance of Context
  #
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#7
  def initialize(output, context, code, auto_escape); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#53
  def safe_after_attribute_name_append=(value); end

  # @raise [DontInterpolateHere]
  #
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#65
  def safe_after_equal_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#40
  def safe_attribute_name_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#116
  def safe_comment_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#130
  def safe_none_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#14
  def safe_quoted_value_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#95
  def safe_rawtext_append=(value); end

  # @raise [DontInterpolateHere]
  #
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#34
  def safe_space_after_attribute_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#70
  def safe_tag_append=(value); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#82
  def safe_tag_name_append=(value); end

  # @raise [DontInterpolateHere]
  #
  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#27
  def safe_unquoted_value_append=(value); end

  private

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#150
  def auto_escape_html_safe_value(arg); end

  # source://better_html//lib/better_html/better_erb/validated_output_buffer.rb#138
  def properly_escaped(value); end
end

# source://better_html//lib/better_html/config.rb#6
class BetterHtml::Config
  include ::SmartProperties
  extend ::SmartProperties::ClassMethods

  # @return [Boolean]
  #
  # source://better_html//lib/better_html/config.rb#20
  def javascript_attribute_name?(name); end

  # @return [Boolean]
  #
  # source://better_html//lib/better_html/config.rb#28
  def javascript_safe_method?(name); end

  # @return [Boolean]
  #
  # source://better_html//lib/better_html/config.rb#24
  def lodash_safe_javascript_expression?(code); end
end

# source://better_html//lib/better_html/errors.rb#8
class BetterHtml::DontInterpolateHere < ::BetterHtml::InterpolatorError; end

# source://better_html//lib/better_html/errors.rb#12
class BetterHtml::Errors < ::Array
  # source://better_html//lib/better_html/errors.rb#13
  def add(_arg0); end
end

# source://better_html//lib/better_html/helpers.rb#4
module BetterHtml::Helpers
  # source://better_html//lib/better_html/helpers.rb#5
  def html_attributes(args); end
end

# source://better_html//lib/better_html/html_attributes.rb#4
class BetterHtml::HtmlAttributes
  # @return [HtmlAttributes] a new instance of HtmlAttributes
  #
  # source://better_html//lib/better_html/html_attributes.rb#5
  def initialize(data); end

  # source://better_html//lib/better_html/html_attributes.rb#9
  def to_s; end
end

# source://better_html//lib/better_html/errors.rb#10
class BetterHtml::HtmlError < ::RuntimeError; end

# source://better_html//lib/better_html/errors.rb#7
class BetterHtml::InterpolatorError < ::RuntimeError; end

# source://better_html//lib/better_html/errors.rb#16
class BetterHtml::ParserError < ::RuntimeError
  # @return [ParserError] a new instance of ParserError
  #
  # source://better_html//lib/better_html/errors.rb#19
  def initialize(message, position, line, column); end

  # Returns the value of attribute column.
  #
  # source://better_html//lib/better_html/errors.rb#17
  def column; end

  # Returns the value of attribute line.
  #
  # source://better_html//lib/better_html/errors.rb#17
  def line; end

  # Returns the value of attribute position.
  #
  # source://better_html//lib/better_html/errors.rb#17
  def position; end
end

# source://better_html//lib/better_html/railtie.rb#6
class BetterHtml::Railtie < ::Rails::Railtie; end

# source://better_html//lib/better_html/errors.rb#9
class BetterHtml::UnsafeHtmlError < ::BetterHtml::InterpolatorError; end

# source://better_html//lib/better_html/version.rb#4
BetterHtml::VERSION = T.let(T.unsafe(nil), String)
